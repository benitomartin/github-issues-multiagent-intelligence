[project]
name = "github-intelligence-env"
version = "0.1.0"
description = """
A Python package for GitHub Intelligence.
"""
readme = "README.md"
authors = [
    {name = "Benito Martin"}
]
license = {text = "MIT License"}
requires-python = ">=3.12"

dependencies = [
    "alembic>=1.16.2",
    "detect-secrets>=1.5.0",
    "fastembed-gpu>=0.7.1",
    "guardrails-ai>=0.5.15",
    "guardrails-api-client>=0.4.0a1",
    "langchain>=0.3.26",
    "langchain-openai>=0.3.24",
    "langgraph>=0.4.8",
    "loguru>=0.7.3",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.9.1",
    "python-dotenv>=1.1.0",
    "qdrant-client>=1.14.3",
    "requests>=2.32.4",
    "sqlalchemy>=2.0.41",
]

[dependency-groups]
dev = [
 "boto3>=1.38.41",
 "langgraph-cli[inmem]>=0.3.3",
 "pre-commit>=4.2.0",
]
lint = [
    "mypy>=1.16.1",
    "ruff>=0.12.0",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.4.20250611",
]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

######################################
# --- Linting & Formatting Tools --- #
######################################

[tool.ruff]
# Assume Python 3.12
target-version = "py312"

# Same as Black.
line-length = 125
indent-width = 4

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

# Whether to show an enumeration of all fixed lint violations
show-fixes = true

# Enable common lint rules.
lint.select = [
  "B",    # flake8-bugbear
  "E",    # pycodestyle
  "F",    # Pyflakes1
  "I",    # isort
  "SIM",  # similarity
  "UP",   # pyupgrade
]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

[tool.ruff.lint.mccabe]
# Maximum allowed McCabe complexity.
max-complexity = 10


#########################
# --- Static Typing --- #
#########################

[tool.mypy]
# Mypy configuration.
files = ["src"]  # Check from project root instead of just src
mypy_path = ["src"]  # Set mypy path to project root
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_return_any =false
strict_optional = true

#########################
# --- Testing Tools --- #
#########################

[tool.pytest.ini_options]
testpaths = [ "tests" ]
python_files = [ "test_*.py" ]
addopts = "-ra -v -s"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]
