# docker-compose.yml
services:
  db:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - ../.env.${APP_ENV}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    environment:
      - APP_ENV=${APP_ENV}
    env_file:
      - ../.env.${APP_ENV}
    ports:
    - "${ADMINER_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: ..
      dockerfile: docker/${APP_ENV}.Dockerfile
      secrets:
        - GUARDRAILS_API_KEY
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=${APP_ENV}
    env_file:
      - ../.env.${APP_ENV}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

secrets:
  GUARDRAILS_API_KEY:
    environment: GUARDRAILS_API_KEY

volumes:
  postgres_data:
    name: db_data_${APP_ENV}
