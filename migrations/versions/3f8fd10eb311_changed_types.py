"""changed types

Revision ID: 3f8fd10eb311
Revises:
Create Date: 2025-06-17 16:15:20.321973

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3f8fd10eb311"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "comments", "id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False, autoincrement=True
    )
    op.alter_column("comments", "comment_id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False)
    op.alter_column("comments", "issue_id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False)
    op.alter_column(
        "issues",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('issues_id_seq'::regclass)"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "issues",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('issues_id_seq'::regclass)"),
    )
    op.alter_column("comments", "issue_id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False)
    op.alter_column("comments", "comment_id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False)
    op.alter_column(
        "comments", "id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False, autoincrement=True
    )
    # ### end Alembic commands ###
