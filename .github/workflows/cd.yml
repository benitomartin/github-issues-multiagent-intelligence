name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      # Step 3: Install AWS CLI
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/aws-cli-v2/latest/unix/x86_64/awscli.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./install

      # Step 4: Authenticate with AWS CLI for EKS access
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      # Step 5: Authenticate to Kubernetes using kubectl with EKS credentials
      - name: Set up KubeConfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      # Step 6: Interact with Kubernetes
      - name: Get pods
        uses: actions-hub/kubectl@master
        with:
          args: get pods

      # Step 7: Get LoadBalancer URL
      - name: Get LoadBalancer URL
        run: |
          LB_URL=$(kubectl get svc fastapi-external -n my-app -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "The LoadBalancer URL is: $LB_URL"
          echo "LB_URL=$LB_URL" >> $GITHUB_ENV  # Set as an environment variable for subsequent steps

      # Step 8: Test FastAPI endpoint
      - name: Test FastAPI endpoint
        run: |
          echo "Testing FastAPI endpoint..."
          # Wait for the load balancer to route traffic
          timeout 60s bash -c 'until curl -s http://$LB_URL/health; do sleep 2; done'
          echo "LB URL: $LB_URL"

          # Test the POST endpoint
          curl -X POST "http://$LB_URL/process-issue" \
            -H "Content-Type: application/json" \
            -d '{
              "title": "Test Issue",
              "body": "huberregressor"
            }'
